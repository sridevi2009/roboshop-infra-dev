pipeline {
    agent {
        node {
            label 'Agent-1'
            
        } 
    }
    options {
        timeout(time: 1, unit: 'HOURS')
        disableConcurrentBuilds() 
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'action', choices: ['apply', 'destroy'], description: 'Pick something')
    }
    stages {
        stage('init') {
            steps {
                sh """
                    cd 01-vpc
                    terraform init  -reconfigure
                """
            }
        }
        stage('plan') {
            steps {
                sh """
                    cd 01-vpc
                    terraform plan
                """
            }
        }
        stage('apply') {
            when {
                expression { 
                    "$params.action" == 'apply'

                } 
            }      
            input {
                message "Should we continue?"
                ok "Yes, we should."
            }   
            steps {
                sh """
                    cd 01-vpc
                    terraform apply -auto-approve
                """
                
            }
        }
        stage('destroy') {
            when {
                expression { 
                    "$params.action" == 'destroy'

                } 
            }      
            input {
                message "Should we continue?"
                ok "Yes, we should."
            }   
            steps {
                sh """
                    cd 01-vpc
                    terraform destroy -auto-approve
                """
                
            }
        }
       
    }
    post { 
        always { 
            echo 'I will always say Hello again!'
        }
        success { 
            echo 'SUCCESS'
        }
        failure { 
            echo 'FAILS'
        }
        aborted { 
            echo 'ABBORTED!'
        }
    }
}