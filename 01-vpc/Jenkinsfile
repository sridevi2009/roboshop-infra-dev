pipeline {
    agent {
       node {
           label 'agent'
       }
    }
    
    options {
        ansiColor('xterm')
        timeout(time: 1, unit: 'HOURS') 
        disableConcurrentBuilds()
    }
    // parameters {
    //     choice(name: 'action', choices: ['apply', 'destroy'], description: 'Pick something')
    // }
        
   
//    build
    stages {
        stage('init') {
            steps {
                sh """
                    cd 01-vpc
                    terraform init -reconfigure
                """
            }
        }
        stage('plan') {
            steps {
                sh """
                   cd 01-vpc
                   terraform plan
                """   
            }
        }
        stage('Deploy') {
            // when {
            //     expression{
            //        "${params.action}" == 'apply' 
            //     }   
            // }
            input {
               message "should we continue?"
               ok "yes, we should."
            //    submitter "alice,bob"
            //    parameters {
            //        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description:'Who should I say hello to?')
            //    }    
            }
            steps {
                sh """
                   cd 01-vpc
                   terraform apply -auto-approve
                """   
            }
        }
        // stage('Destroy') {
        //     when {
        //         expression{
        //            "${params.action}" == 'destroy' 
        //         }   
        //     }
        //     input {
        //        message "should we continue?"
        //        ok "yes, we should."
        //     //    submitter "alice,bob"
        //     //    parameters {
        //     //        string(name: 'PERSON', defaultValue: 'Mr Jenkins', description:'Who should I say hello to?')
        //     //    }    
        //     }
        //     steps {
        //         sh """
        //            cd 01-vpc
        //            terraform destroy -auto-approve
        //         """   
        //     }
        // }
    }
    //  post build
    post { 
        always { 
            echo 'I will always say Hello again!'
        }
        failure { 
            echo 'This will runs when pipeline is failed, used generally to send some alerts'
        }
        success{
            echo 'I will say hello when pipeline is success'
        }
    
    }
}